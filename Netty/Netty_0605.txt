基础概念：
	1.BIO：同步阻塞式I/O通信
	
select和epoll:
	1.支持一个进程打开的socket描述符（FD）不受限制（仅受限于操作系统的最大文件句柄数）
	  select最大的缺陷就是单个进程打开的FD是有一定限制的，它由FD_SETSIZE设置，默认值
	是1024.epoll并没有这个限制，它所支持的FD上限是操作系统的最大文件句柄数，这个数字远
	远大于1024.
	2.I/O效率不会随着FD数目的增加而增加而线性下降
	当你拥有一个很大的socket集合时，由于网络延时或者链路空闲，任一时刻只有少部分的socket
	是活跃的，但是select/poll每次调用都会线性扫面全部的集合，导致效率呈现线性下降。epoll
	不存在这个问题，它只对活跃的socket操作，因为内核实现中，epoll是根据每个fd上面的callback
	函数实现的。伪AIO
	3.使用mmap加速内核与用户空间的消息传递
	4.epoll的API更加简单

BIO：
	BIO主要的问题在于每当有一个新的客户端请求接入时，服务端必须创建一个新的线程处理新连接
	入的客户端链路，一个线程只能处理一个客户端连接。在海量消息的情况下，必定会导致服务器资源
	消耗殆尽，宕机
伪异步I/O：
	
	